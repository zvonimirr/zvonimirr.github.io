---
import { slugify } from "../utils";
interface Props {
  title: string;
  hasBorder?: boolean;
}

const { title, hasBorder } = Astro.props;
---

<astro-section id={slugify(title)} class="group">
  <abbr title="Press to open">
    <h2
      class="text-lg md:text-xl text-white lowercase transition-colors opacity-60 hover:text-secondary hover:cursor-pointer hover:opacity-80 group-[.open]:text-secondary group-[.open]:underline group-[.open]:opacity-100"
    >
      {title}
    </h2>
  </abbr>

  <div class={`text-white hidden ${hasBorder ? "border-l-4 my-2 pl-4" : ""}`}>
    <slot />
  </div>
</astro-section>

<script>
  class Section extends HTMLElement {
    container: HTMLElement;

    constructor() {
      super();

      const container = this.querySelector("div");
      if (!container) {
        throw new Error("No container found");
      }

      this.container = container;

      const trigger = this.querySelector("h2");

      if (!trigger) {
        throw new Error("No trigger found");
      }

      trigger.addEventListener("click", () => {
        // Close all other sections
        document
          .querySelectorAll(`astro-section:not(#${this.id})`)
          .forEach((section) => {
            const container = section.querySelector("div");
            if (!container) {
              throw new Error("No container found");
            }

            this.collapse(section, container);
          });

        // Check if the section is open
        if (this.classList.contains("open")) {
          this.collapse(this, this.container);
        } else {
          this.extend(this, this.container);
        }
      });
    }

    extend(section: Element, container: HTMLElement) {
      container.classList.remove("animate-collapse");
      container.classList.remove("hidden");
      container.classList.add("animate-extend");

      setTimeout(() => {
        section.classList.add("open");
        container.classList.remove("hidden");
      }, 500);
    }

    collapse(section: Element, container: HTMLElement) {
      container.classList.remove("animate-extend");
      container.classList.add("animate-collapse");

      setTimeout(() => {
        section.classList.remove("open");
        container.classList.add("hidden");
      }, 500);
    }
  }

  customElements.define("astro-section", Section);
</script>
