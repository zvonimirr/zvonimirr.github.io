---
import type { GetStaticPaths } from "astro";
import { projects } from "../../utils/projects";
import BaseLayout from "../../layouts/BaseLayout.astro";
import TechStackIcon from "../../components/TechStackIcon.astro";
import { Image } from "astro:assets";

export const getStaticPaths = (() => {
  return projects.map((project) => {
    return {
      params: {
        project: project.url,
      },
    };
  });
}) satisfies GetStaticPaths;

const project = projects.find(
  (project) => project.url === Astro.params.project
);

if (!project) {
  throw new Error(`Project not found: ${Astro.params.project}`);
}
---

<BaseLayout title={project.title} mainClass="flex-grow">
  <h1 class="text-4xl font-bold">
    {project.title}
  </h1>
  <h2 class="text-2xl">
    {project.description}
  </h2>

  {
    project.review && (
      <div class="mt-4">
        <h3 class="text-3xl font-bold">Review</h3>
        <blockquote class="text-lg">
          {project.review.text.split("\n").map((paragraph) => (
            <>
              {paragraph}
              <br />
            </>
          ))}
          <footer class="text-lg">
            <cite>â€”{project.review.name}</cite>
          </footer>
        </blockquote>
      </div>
    )
  }

  <h3 class="text-3xl font-bold mt-4">Tech Stack</h3>
  <div id="tech-stack">
    {
      project.techStack.map((tech) => (
        <a href={`#${tech.id}`}>
          <TechStackIcon
            name={tech.icon}
            title={tech.name}
            class={tech.class}
          />
        </a>
      ))
    }
  </div>

  <h3 class="text-3xl font-bold mt-4">Project Goal</h3>
  {
    project.goal
      .split("\n")
      .map((paragraph) => <p class="text-lg">{paragraph}</p>)
  }

  <br />

  <Image
    src={project.image}
    alt={project.title}
    width="800"
    height="500"
    decoding="async"
    loading="lazy"
  />

  <h3 class="text-3xl font-bold mt-4">Solution</h3>

  <div class="flex flex-col gap-2">
    {
      project.techStack.map((tech) => (
        <div>
          <h4 class="text-lg font-bold" id={tech.id}>
            {tech.name}
          </h4>
          {tech.description.split("\n").map((paragraph) => (
            <p class="text-lg">{paragraph}</p>
          ))}
        </div>
      ))
    }
  </div>

  <hr class="my-4" />

  {
    project.projectUrl && (
      <a
        href={project.projectUrl}
        rel="noopener noreferrer"
        target="_blank"
        class="text-lg underline"
      >
        {project.projectUrl}
      </a>
    )
  }
</BaseLayout>

<style>
  #tech-stack {
    @apply flex gap-2;
    flex-flow: row wrap;

    a {
      transition: transform 0.2s ease-in-out;

      &:hover {
        transform: scale(1.1);
      }
    }
  }
</style>
